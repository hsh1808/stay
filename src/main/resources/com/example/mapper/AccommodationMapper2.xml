<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.mapper.AccommodationMapper">

    <select id="getList" resultType="com.example.domain.AccommodationDTO">
        select * from accommodation
    </select>
    
	<!-- 숙소(사업체) 등록 -->
 	<insert id="insertaccommdation">
		INSERT INTO ACCOMMODATION
			(ac_id, email_id, ac_title, ac_type, ac_address, ac_info, checkin, checkout, bu_name)
		VALUES 
			(#{ac_id}, #{email_id}, #{ac_title}, #{ac_type}, #{ac_address}, #{ac_info}, #{checkin}, #{checkout}, #{bu_name})
 	</insert>

	<update id="updateaccommdation">
		update 
			accommodation
 		set 
 			email_id=#{email_id}, ac_title=#{ac_title}, ac_type=#{ac_type}, 
 			ac_address=#{ac_address}, ac_info=#{ac_info}, checkin=#{checkin}, checkout=#{checkout}
 		where 
 			ac_id=#{ac_id}
 	</update>
	
	<delete id="deleteaccommdation">
		delete accommodation where ac_id=#{ac_id}
 	</delete>
 	
 	
	<!-- 숙소 검색 (숙소 아이디로) (숙소목록 중에서 숙소 상세보기 페이지로 들어갈 때 방을 보여준다)-->
	<select id="searchByac_id" resultType="com.example.domain.AccommodationDTO">
        select * from accommodation
        where
        	ac_id =#{ac_id}
    </select>
    
    <!-- 숙소 검색 (숙소 제목, checkin, checkout 시간으로) -->
	<select id="searchListByTitle" resultType="com.example.domain.AccommodationDTO">
	    select * from accommodation
	    where
	        ac_title LIKE '%' || #{ac_title} || '%'
	</select>
    
    <select id="searchByac_type" resultType="com.example.domain.AccommodationDTO">
        select * from accommodation
        where
        	ac_type = #{ac_type}
    </select>
    
    
    
    
    
<!--     체크박스의 로직 : 기본적으로 0이 들어간다 그러므로 아무것도 출력되지않는다 하지만 체크박스가 클릭되면 해당 카테고리 번호가 들어가므로 -->
<!--                   해당 카테고리가 보인다 (체크박스 끼리는 OR 연산자이기 때문) -->
<!-- 	ro_basic_count 이 null값이면 출력이 안되므로 유의해야한다 (그래서 숙소에 방이 하나도 없으면 출력이 안된다!!)-->
<!-- 	나중에 입력 폼에서 required 속성을 사용해야겠다 -->
    <select id="aside_search" resultType="com.example.domain.SearchWordDTO">
        
		    SELECT DISTINCT a.ac_title, a.ac_address, a.ac_info, a.ac_id, r2.min_room_price, r1.max_ro_basic_count
			FROM accommodation a
			LEFT JOIN (
			    SELECT ac_id, MAX(ro_basic_count) AS max_ro_basic_count
			    FROM room 
			    GROUP BY ac_id
			) r1 ON r1.ac_id = a.ac_id
            LEFT JOIN (
			    SELECT ac_id, MIN(room_price) AS min_room_price
			    FROM room 
			    GROUP BY ac_id
			) r2 ON r2.ac_id = a.ac_id
			WHERE (a.ac_title LIKE '%' || #{ac_title} || '%' OR a.ac_address LIKE '%' || #{ac_title} || '%')
				AND r1.max_ro_basic_count  &gt;= #{ro_basic_count}
                AND(
                        a.ac_type  LIKE '%' || #{ac_type_checkbox1} || '%'
                        OR  a.ac_type  LIKE '%' || #{ac_type_checkbox2} || '%'
                        OR  a.ac_type  LIKE '%' || #{ac_type_checkbox3} || '%'
                        OR  a.ac_type  LIKE '%' || #{ac_type_checkbox4} || '%'
                        OR  a.ac_type  LIKE '%' || #{ac_type_checkbox5} || '%'
                        OR  a.ac_type  LIKE '%' || #{ac_type_checkbox6} || '%'
                        OR  a.ac_type  LIKE '%' || #{ac_type_checkbox7} || '%')
	    
    </select>


<!-- 	남은 방 있을 때만 방을 출력한다 (숙소가 출력되는 것은 아니다 조인 될뿐)) -->
<!-- 	원리 : 일단 검색한 날짜 사이의 방을 모두 불러온다 그런다음 만약 remaingroom 테이블에서 해당 날짜의 데이터가 있다면 remaing 테이블의 남은 방 수 값을 가져오고 -->
<!-- 	만약 null이라면 아무도 방을 사용하지 않으므로 room테이블의 남은 방 수를 가져오고 만약 remaing 테이블의 남은 방 수가 0이라면 남은 방이 없으므로 가져오지않는다 -->
<!-- 	일단 ac_id는 asd123 이고 room_num=2인 방의 남은방을 계산한다 -->
<!-- 	날짜는 2024-04-10부터 2024-04-30까지의 기간 중 남은 방이 있다면 남은 방의 수를 출력한다 -->
<!-- 	날짜 처리할 때 에러나서 일단 제외하였음... -->
<!-- 	<select id="rest_room_search" resultType="com.example.domain.SearchWordDTO"> -->
	
<!-- 		<![CDATA[ -->
<!-- 	        SELECT  DISTINCT a.ac_title, a.ac_address, a.ac_info, a.ac_id, min_room_price -->
<!-- 			FROM ( -->
<!-- 			    SELECT TO_DATE('2024-05-10', 'YYYY-MM-DD') + LEVEL - 1 AS day  -->
<!-- 			    FROM dual  -->
<!-- 			    CONNECT BY TO_DATE('2024-04-01', 'YYYY-MM-DD') + LEVEL - 1 <= TO_DATE('2024-05-10', 'YYYY-MM-DD') -->
<!-- 			) d  -->
<!-- 			LEFT JOIN remaingroom rm ON d.day = rm.day  -->
<!-- 			LEFT JOIN ( -->
<!-- 			    SELECT ac_id, ac_title, ac_address, ac_info, ac_type -->
<!-- 			    FROM accommodation  -->
<!-- 			    WHERE ac_title LIKE '%' || #{ac_title} || '%' -->
<!-- 			    	OR -->
<!--                       ac_address LIKE '%' || #{ac_title} || '%' -->
<!-- 			) a ON 1 = 1 -->
<!-- 			LEFT JOIN ( -->
<!-- 			    SELECT ro_count AS v_ro_count, ac_id -->
<!-- 			    FROM room  -->
<!-- 			) r ON r.ac_id = a.ac_id -->
<!-- 			LEFT JOIN ( -->
<!-- 			        SELECT ac_id, MIN(room_price) as min_room_price -->
<!--                     FROM room  -->
<!--                     GROUP BY ac_id -->
<!--             )r2 ON r2.ac_id = a.ac_id -->
<!-- 			WHERE  nvl(rm.remaingroom,r.v_ro_count) != 0 -->
<!-- 				AND -->
<!--                    a.ac_type = #{ac_type} -->
<!-- 		]]> -->
<!--     </select> -->


<!-- 	SUBSTR(your_column, 1, INSTR(a.ac_title, ' ') - 1)  을 이용하여 공백이 시작하기 전의 주소까지만 추출하였다 -->
<!-- 	DISTINCT로 중복을 제거하였음 -->
	<select id="rest_room_search" resultType="com.example.domain.SearchWordDTO">
	   SELECT DISTINCT a.ac_title,
                SUBSTR(a.ac_address, 1, INSTR(a.ac_address, ' ') - 1) AS ac_address,
                a.ac_info,
                a.ac_id,
                r2.min_room_price
	    FROM accommodation a
	    LEFT JOIN room r ON r.ac_id = a.ac_id
	    LEFT JOIN (
	        SELECT ac_id, MIN(room_price) AS min_room_price
	        FROM room 
	        GROUP BY ac_id
	    ) r2 ON r2.ac_id = a.ac_id
	    WHERE a.ac_type LIKE '%' || #{ac_type} || '%'
	    	AND(    a.ac_title LIKE '%' || #{ac_title} || '%'
	            OR a.ac_address LIKE '%' || #{ac_title} || '%')
	</select>
	
    
    
    <select id="accommodation_detail" resultType="com.example.domain.accommodation_detailDTO">
    	SELECT a.ac_id, r.room_num , a.ac_title, a.ac_info, a.ac_address, r.ro_info, r.ro_name, r.ro_basic_count, r.ro_max_count, 
    		TO_CHAR(a.checkin, 'HH24:MI') AS checkin_string, TO_CHAR(a.checkout, 'HH24:MI') AS checkout_string, r.room_price
    		, a.email_id, a.bu_name
		FROM accommodation a
		LEFT JOIN room r ON r.ac_id=a.ac_id
		WHERE a.ac_id=#{ac_id}
    </select>

</mapper>
